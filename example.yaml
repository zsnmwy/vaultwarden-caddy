apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    k8s-app: vaultwarden
    qcloud-app: vaultwarden
  name: vaultwarden
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: vaultwarden
      qcloud-app: vaultwarden
  serviceName: ""
  template:
    metadata:
      annotations:
        eks.tke.cloud.tencent.com/eip-attributes: '{"InternetMaxBandwidthOut":100,
          "InternetChargeType":"TRAFFIC_POSTPAID_BY_HOUR"}'
        eks.tke.cloud.tencent.com/eip-claim-delete-policy: Never
        eks.tke.cloud.tencent.com/retain-ip: "true"
        eks.tke.cloud.tencent.com/root-cbs-size: "20"
        eks.tke.cloud.tencent.com/security-group-id: sg-hbpgiibt
        eks.tke.cloud.tencent.com/spot-pod: "true"
      labels:
        k8s-app: vaultwarden
        qcloud-app: vaultwarden
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - eklet-subnet-kdb747cs-998686
      containers:
      - env:
        - name: DATABASE_URL
          value: 
        - name: I_REALLY_WANT_VOLATILE_STORAGE
          value: "true"
        - name: ROCKET_PORT
          value: "80"
        - name: DOMAIN
          value: 
        - name: CLOUDFLARE_API_TOKEN
          value: 
        image: zsnmwy/vaultwarden-caddy-cloudflare:1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 443
          timeoutSeconds: 1
        name: vaultwarden
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 443
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate